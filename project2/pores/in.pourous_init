#initialize argon gas
#fix temperature and let the whole system equilibriate
#create pores
#fix moving to nvt and add foce
#let system equilibriate again
#fix nve
#run simulations


#3d lennard jones aragon gas

variable    b       equal 5.72 #cell length in Ã…
variable    n_cell  equal 20 #number of cells, ya dumbwit
variable    T       equal 1.5
variable    seed    equal 8666714
variable    sigma   equal 3.405 #conversion factor for aragon gas
variable    rho     equal 4/(${b}^3)

variable    r_low   equal 20/${b} #size variation in spheres
variable    r_high  equal 30/${b}

variable    n_pore  equal 20 #number of pores
#---------------------INITIALIZATION-----------------------
units lj
dimension 3
boundary p p p
atom_style atomic #argon
timestep 0.001

#variable   radius_temp loop 4 ${max_rad}
#---------------------ATOM DEFINITION-----------------------

lattice fcc 1.3 # ${rho}
region simbox block 0 ${n_cell} 0 ${n_cell} 0 ${n_cell} #${n_cell} units cells of size b

create_box 2 simbox #2 is number of atom types
create_atoms 1 box



mass * 1.0 #gives the atoms mass 1 in relative LJ units


#---------------------FORCEFIELDS-----------------------
pair_style lj/cut 3.0       #defines the type of potential, and the cutoff in LJ units
pair_coeff * * 1.0 1.0 3.0  #describes the paramaters for the interactions
                            #* * indicates we are describing interactions between
                            # type * and type * atoms. the rest is sigma, epsilon and
                            # cutoff distance respectivley.

fix 1 all nvt temp ${T} ${T} 0.1 #specifies type of simulation. here we have constant n v and t
                                 # the 1 is just the name of the fix


velocity all create ${T} ${seed}

thermo 100
run 200 #to reach equilibrium


#---------------------defining pores-----------------------


variable i loop ${n_pore}
label loop_mark
    variable x      equal random(0,${n_cell},${seed})
    variable y      equal random(0,${n_cell},${seed})
    variable z      equal random(0,${n_cell},${seed})
    variable r      equal random(${r_low},${r_high},${seed})


    region r_${i} sphere ${x} ${y} ${z} ${r}  side in

    next i

jump SELF loop_mark

#---------------------combining pores-----------------------
region stat_0 union 2 r_1 r_2 side in #combining first two pores
region moving_0 union 2 r_1 r_2 side out

variable loop_n equal ${n_pore}-3

label union_mark
variable i loop ${loop_n} #combining pores cumulatively into different stat regions
    variable j equal $i+2
    variable l equal $i-1
    region stat_${i} union 2 stat_${l} r_${j} side in
    region moving_${i} union 2 moving_${l} r_${j} side out

    print "j:${j}"
    next i

jump SELF union_mark

region stat union 2 stat_${loop_n} r_${n_pore} side in #combining final pore into region
region moving union 2 stat_${loop_n} r_${n_pore} side out #everything that is outside stat and in simbox

group stat_particles region stat
group moving_particles subtract all stat_particles

delete_atoms porosity moving 0.9 ${seed}

set group stat_particles type 2
set group stat_particles vx 0.0 vy 0.0 vz 0.0

unfix 1
fix 1 moving_particles nvt temp ${T} ${T} 0.5

#fix 2 moving_particles addforce 5.0 0.0 0.0

variable num_moving equal count(moving_particles)/0.5
variable num_stat equal count(stat_particles)
variable phi equal ${num_moving}/(${num_moving}+${num_stat})
print "phi ${phi}"

#--------------------- equil with pores-----------------------
thermo 100
run 300

unfix 1
fix 1 moving_particles nve

#--------------------- simulation -----------------------
#reset_timestep 0
variable time equal step*dt
#compute cmvel moving_particles vcm/chunk

compute _msd moving_particles msd

compute myRDF all  rdf 50 #radial distribution
#fix 3 all ave/time 1++ 1 1++ c_myRDF[*] file data/log.rdf_T${T}_phi${phi} mode vector


log data/log.cs_T${T}_phi${phi}
dump 1 all custom 10 data/dump.lammps_flow_T${T}_phi${phi} id type x y z vx vy vz
thermo_style custom step v_time temp ke pe etotal press c__msd[4]
thermo 10

run 2000

undump 1
